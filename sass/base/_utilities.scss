/*Utility classes are meant to do only one thing, and do it well. They are designed to be simple,
 composable and re-usable, allowing for easy and fast development. While a CSS system based on utility 
 classes alone is not desirable, having a set of utility classes that allow you to quickly put together 
 templates is great.

 https://blog.mariano.io/css-utility-classes-how-to-use-them-effectively-d61ee00dad2d
 
Common Use Cases
*I find utility classes really helpful for:
*Margin/padding
*Text (colors, size, styles)
*Common Background Colors
*Hiding/Showing stuff
*Display (block, inline-block)

Naming utility classes
To separate utility classes from component classes, itâ€™s good to namespace them. I use the .u- namespace.
You can also shorthand most properties for faster coding. Here are a couple I use:
*p/m for margin/padding
*t/r/l/b for top/right/left/bottom
*v/h for vertical/horizontal
*bg for background
*/

//display none between 1024 - 1280px: small-desktop
.display-none-s-desktop {
  @include respond(s-desktop) {
    display: none;
  }
  @include respond(m-desktop) {
    display: block;
  }
}

//tablet + flex justify-content: center;
@include respond(s-desktop) {
  .flex-j-end-s-desktop {
    display: flex;
    justify-content: flex-end !important;
  }
}

//element width auto
.w-auto {
  width: auto !important;
}

//center element
.center {
  margin-left: auto;
  margin-right: auto;
}

//text center
.text-center {
  text-align: center;
}

//display flex
.d-flex {
  display: flex;
}
//hide element
.hide {
  display: none !important;
}
//smaller font
.small {
  font-size: 80%;
}
//flex align none
.flex-align-unset {
  align-items: unset !important;
}

//width 100%
w-100 {
  width: 100% !important;
}

//color blue on hover
.hover-font-blue {
  p,
  a,
  li {
    &:hover {
      color: $color-primary-blue;
    }
  }
}

//color green on hover
.hover-font-green {
  p,
  a,
  li {
    &:hover {
      color: $color-primary-green;
    }
  }
}

//sukhi222 span colors
.sukhi222-blue-span {
  color: $color-primary-blue;
  font-size: 120%;
}
.sukhi222-green-span {
  color: $color-primary-green;
  font-size: 120%;
}
.sukhi222-red-span {
  color: $color-primary-red;
  font-size: 120%;
}

//thank you page and 404 header h1
.m-header{
  margin: 15rem 0;
  color: #474545 !important;
}


//for mobile menu when scroling, disable background scrolling
.lock-scroll {
  overflow: hidden; }
